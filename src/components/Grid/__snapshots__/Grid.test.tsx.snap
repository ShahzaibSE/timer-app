// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Grid checking if reset button exist 1`] = `
Array [
  <WithStyles(ForwardRef(ButtonBase))
    className="makeStyles-image-2"
    focusRipple={true}
    focusVisibleClassName="makeStyles-focusVisible-3"
    id="Reset"
    key="Reset"
    onClick={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
  >
    <ForwardRef(ButtonBase)
      className="makeStyles-image-2"
      classes={
        Object {
          "disabled": "Mui-disabled",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiButtonBase-root",
        }
      }
      focusRipple={true}
      focusVisibleClassName="makeStyles-focusVisible-3"
      id="Reset"
      onClick={[Function]}
      style={
        Object {
          "width": "40%",
        }
      }
    >
      <button
        className="MuiButtonBase-root makeStyles-image-2"
        disabled={false}
        id="Reset"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "width": "40%",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="makeStyles-imageSrc-5"
          style={
            Object {
              "backgroundImage": "url('reset-button-background.jpg')",
            }
          }
        />
        <span
          className="makeStyles-imageBackdrop-6"
        />
        <span
          className="makeStyles-imageButton-4"
        >
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-imageTitle-7"
            color="inherit"
            component="span"
            variant="subtitle1"
          >
            <ForwardRef(Typography)
              className="makeStyles-imageTitle-7"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              color="inherit"
              component="span"
              variant="subtitle1"
            >
              <span
                className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
              >
                Reset
                <span
                  className="makeStyles-imageMarked-8"
                />
              </span>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </span>
        <WithStyles(memo)
          center={false}
        >
          <ForwardRef(TouchRipple)
            center={false}
            classes={
              Object {
                "child": "MuiTouchRipple-child",
                "childLeaving": "MuiTouchRipple-childLeaving",
                "childPulsate": "MuiTouchRipple-childPulsate",
                "ripple": "MuiTouchRipple-ripple",
                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                "rippleVisible": "MuiTouchRipple-rippleVisible",
                "root": "MuiTouchRipple-root",
              }
            }
          >
            <span
              className="MuiTouchRipple-root"
            >
              <TransitionGroup
                childFactory={[Function]}
                component={null}
                exit={true}
              />
            </span>
          </ForwardRef(TouchRipple)>
        </WithStyles(memo)>
      </button>
    </ForwardRef(ButtonBase)>
  </WithStyles(ForwardRef(ButtonBase))>,
  <ForwardRef(ButtonBase)
    className="makeStyles-image-2"
    classes={
      Object {
        "disabled": "Mui-disabled",
        "focusVisible": "Mui-focusVisible",
        "root": "MuiButtonBase-root",
      }
    }
    focusRipple={true}
    focusVisibleClassName="makeStyles-focusVisible-3"
    id="Reset"
    onClick={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
  >
    <button
      className="MuiButtonBase-root makeStyles-image-2"
      disabled={false}
      id="Reset"
      onBlur={[Function]}
      onClick={[Function]}
      onDragLeave={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "width": "40%",
        }
      }
      tabIndex={0}
      type="button"
    >
      <span
        className="makeStyles-imageSrc-5"
        style={
          Object {
            "backgroundImage": "url('reset-button-background.jpg')",
          }
        }
      />
      <span
        className="makeStyles-imageBackdrop-6"
      />
      <span
        className="makeStyles-imageButton-4"
      >
        <WithStyles(ForwardRef(Typography))
          className="makeStyles-imageTitle-7"
          color="inherit"
          component="span"
          variant="subtitle1"
        >
          <ForwardRef(Typography)
            className="makeStyles-imageTitle-7"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter",
                "alignJustify": "MuiTypography-alignJustify",
                "alignLeft": "MuiTypography-alignLeft",
                "alignRight": "MuiTypography-alignRight",
                "body1": "MuiTypography-body1",
                "body2": "MuiTypography-body2",
                "button": "MuiTypography-button",
                "caption": "MuiTypography-caption",
                "colorError": "MuiTypography-colorError",
                "colorInherit": "MuiTypography-colorInherit",
                "colorPrimary": "MuiTypography-colorPrimary",
                "colorSecondary": "MuiTypography-colorSecondary",
                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                "displayBlock": "MuiTypography-displayBlock",
                "displayInline": "MuiTypography-displayInline",
                "gutterBottom": "MuiTypography-gutterBottom",
                "h1": "MuiTypography-h1",
                "h2": "MuiTypography-h2",
                "h3": "MuiTypography-h3",
                "h4": "MuiTypography-h4",
                "h5": "MuiTypography-h5",
                "h6": "MuiTypography-h6",
                "noWrap": "MuiTypography-noWrap",
                "overline": "MuiTypography-overline",
                "paragraph": "MuiTypography-paragraph",
                "root": "MuiTypography-root",
                "srOnly": "MuiTypography-srOnly",
                "subtitle1": "MuiTypography-subtitle1",
                "subtitle2": "MuiTypography-subtitle2",
              }
            }
            color="inherit"
            component="span"
            variant="subtitle1"
          >
            <span
              className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
            >
              Reset
              <span
                className="makeStyles-imageMarked-8"
              />
            </span>
          </ForwardRef(Typography)>
        </WithStyles(ForwardRef(Typography))>
      </span>
      <WithStyles(memo)
        center={false}
      >
        <ForwardRef(TouchRipple)
          center={false}
          classes={
            Object {
              "child": "MuiTouchRipple-child",
              "childLeaving": "MuiTouchRipple-childLeaving",
              "childPulsate": "MuiTouchRipple-childPulsate",
              "ripple": "MuiTouchRipple-ripple",
              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
              "rippleVisible": "MuiTouchRipple-rippleVisible",
              "root": "MuiTouchRipple-root",
            }
          }
        >
          <span
            className="MuiTouchRipple-root"
          >
            <TransitionGroup
              childFactory={[Function]}
              component={null}
              exit={true}
            />
          </span>
        </ForwardRef(TouchRipple)>
      </WithStyles(memo)>
    </button>
  </ForwardRef(ButtonBase)>,
  <button
    className="MuiButtonBase-root makeStyles-image-2"
    disabled={false}
    id="Reset"
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="makeStyles-imageSrc-5"
      style={
        Object {
          "backgroundImage": "url('reset-button-background.jpg')",
        }
      }
    />
    <span
      className="makeStyles-imageBackdrop-6"
    />
    <span
      className="makeStyles-imageButton-4"
    >
      <WithStyles(ForwardRef(Typography))
        className="makeStyles-imageTitle-7"
        color="inherit"
        component="span"
        variant="subtitle1"
      >
        <ForwardRef(Typography)
          className="makeStyles-imageTitle-7"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="inherit"
          component="span"
          variant="subtitle1"
        >
          <span
            className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
          >
            Reset
            <span
              className="makeStyles-imageMarked-8"
            />
          </span>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </span>
    <WithStyles(memo)
      center={false}
    >
      <ForwardRef(TouchRipple)
        center={false}
        classes={
          Object {
            "child": "MuiTouchRipple-child",
            "childLeaving": "MuiTouchRipple-childLeaving",
            "childPulsate": "MuiTouchRipple-childPulsate",
            "ripple": "MuiTouchRipple-ripple",
            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
            "rippleVisible": "MuiTouchRipple-rippleVisible",
            "root": "MuiTouchRipple-root",
          }
        }
      >
        <span
          className="MuiTouchRipple-root"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
            exit={true}
          />
        </span>
      </ForwardRef(TouchRipple)>
    </WithStyles(memo)>
  </button>,
]
`;

exports[`Grid checking if start button exist 1`] = `
Array [
  <WithStyles(ForwardRef(ButtonBase))
    className="makeStyles-image-2"
    focusRipple={true}
    focusVisibleClassName="makeStyles-focusVisible-3"
    id="Start"
    key="Start"
    onClick={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
  >
    <ForwardRef(ButtonBase)
      className="makeStyles-image-2"
      classes={
        Object {
          "disabled": "Mui-disabled",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiButtonBase-root",
        }
      }
      focusRipple={true}
      focusVisibleClassName="makeStyles-focusVisible-3"
      id="Start"
      onClick={[Function]}
      style={
        Object {
          "width": "40%",
        }
      }
    >
      <button
        className="MuiButtonBase-root makeStyles-image-2"
        disabled={false}
        id="Start"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "width": "40%",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="makeStyles-imageSrc-5"
          style={
            Object {
              "backgroundImage": "url('start-button-background.jpg')",
            }
          }
        />
        <span
          className="makeStyles-imageBackdrop-6"
        />
        <span
          className="makeStyles-imageButton-4"
        >
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-imageTitle-7"
            color="inherit"
            component="span"
            variant="subtitle1"
          >
            <ForwardRef(Typography)
              className="makeStyles-imageTitle-7"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              color="inherit"
              component="span"
              variant="subtitle1"
            >
              <span
                className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
              >
                Start
                <span
                  className="makeStyles-imageMarked-8"
                />
              </span>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </span>
        <WithStyles(memo)
          center={false}
        >
          <ForwardRef(TouchRipple)
            center={false}
            classes={
              Object {
                "child": "MuiTouchRipple-child",
                "childLeaving": "MuiTouchRipple-childLeaving",
                "childPulsate": "MuiTouchRipple-childPulsate",
                "ripple": "MuiTouchRipple-ripple",
                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                "rippleVisible": "MuiTouchRipple-rippleVisible",
                "root": "MuiTouchRipple-root",
              }
            }
          >
            <span
              className="MuiTouchRipple-root"
            >
              <TransitionGroup
                childFactory={[Function]}
                component={null}
                exit={true}
              />
            </span>
          </ForwardRef(TouchRipple)>
        </WithStyles(memo)>
      </button>
    </ForwardRef(ButtonBase)>
  </WithStyles(ForwardRef(ButtonBase))>,
  <ForwardRef(ButtonBase)
    className="makeStyles-image-2"
    classes={
      Object {
        "disabled": "Mui-disabled",
        "focusVisible": "Mui-focusVisible",
        "root": "MuiButtonBase-root",
      }
    }
    focusRipple={true}
    focusVisibleClassName="makeStyles-focusVisible-3"
    id="Start"
    onClick={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
  >
    <button
      className="MuiButtonBase-root makeStyles-image-2"
      disabled={false}
      id="Start"
      onBlur={[Function]}
      onClick={[Function]}
      onDragLeave={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "width": "40%",
        }
      }
      tabIndex={0}
      type="button"
    >
      <span
        className="makeStyles-imageSrc-5"
        style={
          Object {
            "backgroundImage": "url('start-button-background.jpg')",
          }
        }
      />
      <span
        className="makeStyles-imageBackdrop-6"
      />
      <span
        className="makeStyles-imageButton-4"
      >
        <WithStyles(ForwardRef(Typography))
          className="makeStyles-imageTitle-7"
          color="inherit"
          component="span"
          variant="subtitle1"
        >
          <ForwardRef(Typography)
            className="makeStyles-imageTitle-7"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter",
                "alignJustify": "MuiTypography-alignJustify",
                "alignLeft": "MuiTypography-alignLeft",
                "alignRight": "MuiTypography-alignRight",
                "body1": "MuiTypography-body1",
                "body2": "MuiTypography-body2",
                "button": "MuiTypography-button",
                "caption": "MuiTypography-caption",
                "colorError": "MuiTypography-colorError",
                "colorInherit": "MuiTypography-colorInherit",
                "colorPrimary": "MuiTypography-colorPrimary",
                "colorSecondary": "MuiTypography-colorSecondary",
                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                "displayBlock": "MuiTypography-displayBlock",
                "displayInline": "MuiTypography-displayInline",
                "gutterBottom": "MuiTypography-gutterBottom",
                "h1": "MuiTypography-h1",
                "h2": "MuiTypography-h2",
                "h3": "MuiTypography-h3",
                "h4": "MuiTypography-h4",
                "h5": "MuiTypography-h5",
                "h6": "MuiTypography-h6",
                "noWrap": "MuiTypography-noWrap",
                "overline": "MuiTypography-overline",
                "paragraph": "MuiTypography-paragraph",
                "root": "MuiTypography-root",
                "srOnly": "MuiTypography-srOnly",
                "subtitle1": "MuiTypography-subtitle1",
                "subtitle2": "MuiTypography-subtitle2",
              }
            }
            color="inherit"
            component="span"
            variant="subtitle1"
          >
            <span
              className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
            >
              Start
              <span
                className="makeStyles-imageMarked-8"
              />
            </span>
          </ForwardRef(Typography)>
        </WithStyles(ForwardRef(Typography))>
      </span>
      <WithStyles(memo)
        center={false}
      >
        <ForwardRef(TouchRipple)
          center={false}
          classes={
            Object {
              "child": "MuiTouchRipple-child",
              "childLeaving": "MuiTouchRipple-childLeaving",
              "childPulsate": "MuiTouchRipple-childPulsate",
              "ripple": "MuiTouchRipple-ripple",
              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
              "rippleVisible": "MuiTouchRipple-rippleVisible",
              "root": "MuiTouchRipple-root",
            }
          }
        >
          <span
            className="MuiTouchRipple-root"
          >
            <TransitionGroup
              childFactory={[Function]}
              component={null}
              exit={true}
            />
          </span>
        </ForwardRef(TouchRipple)>
      </WithStyles(memo)>
    </button>
  </ForwardRef(ButtonBase)>,
  <button
    className="MuiButtonBase-root makeStyles-image-2"
    disabled={false}
    id="Start"
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="makeStyles-imageSrc-5"
      style={
        Object {
          "backgroundImage": "url('start-button-background.jpg')",
        }
      }
    />
    <span
      className="makeStyles-imageBackdrop-6"
    />
    <span
      className="makeStyles-imageButton-4"
    >
      <WithStyles(ForwardRef(Typography))
        className="makeStyles-imageTitle-7"
        color="inherit"
        component="span"
        variant="subtitle1"
      >
        <ForwardRef(Typography)
          className="makeStyles-imageTitle-7"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="inherit"
          component="span"
          variant="subtitle1"
        >
          <span
            className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
          >
            Start
            <span
              className="makeStyles-imageMarked-8"
            />
          </span>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </span>
    <WithStyles(memo)
      center={false}
    >
      <ForwardRef(TouchRipple)
        center={false}
        classes={
          Object {
            "child": "MuiTouchRipple-child",
            "childLeaving": "MuiTouchRipple-childLeaving",
            "childPulsate": "MuiTouchRipple-childPulsate",
            "ripple": "MuiTouchRipple-ripple",
            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
            "rippleVisible": "MuiTouchRipple-rippleVisible",
            "root": "MuiTouchRipple-root",
          }
        }
      >
        <span
          className="MuiTouchRipple-root"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
            exit={true}
          />
        </span>
      </ForwardRef(TouchRipple)>
    </WithStyles(memo)>
  </button>,
]
`;

exports[`Grid checking if stop button exist 1`] = `
Array [
  <WithStyles(ForwardRef(ButtonBase))
    className="makeStyles-image-2"
    focusRipple={true}
    focusVisibleClassName="makeStyles-focusVisible-3"
    id="Stop"
    key="Stop"
    onClick={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
  >
    <ForwardRef(ButtonBase)
      className="makeStyles-image-2"
      classes={
        Object {
          "disabled": "Mui-disabled",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiButtonBase-root",
        }
      }
      focusRipple={true}
      focusVisibleClassName="makeStyles-focusVisible-3"
      id="Stop"
      onClick={[Function]}
      style={
        Object {
          "width": "40%",
        }
      }
    >
      <button
        className="MuiButtonBase-root makeStyles-image-2"
        disabled={false}
        id="Stop"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "width": "40%",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="makeStyles-imageSrc-5"
          style={
            Object {
              "backgroundImage": "url('stop-time-background.jpg')",
            }
          }
        />
        <span
          className="makeStyles-imageBackdrop-6"
        />
        <span
          className="makeStyles-imageButton-4"
        >
          <WithStyles(ForwardRef(Typography))
            className="makeStyles-imageTitle-7"
            color="inherit"
            component="span"
            variant="subtitle1"
          >
            <ForwardRef(Typography)
              className="makeStyles-imageTitle-7"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              color="inherit"
              component="span"
              variant="subtitle1"
            >
              <span
                className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
              >
                Stop
                <span
                  className="makeStyles-imageMarked-8"
                />
              </span>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </span>
        <WithStyles(memo)
          center={false}
        >
          <ForwardRef(TouchRipple)
            center={false}
            classes={
              Object {
                "child": "MuiTouchRipple-child",
                "childLeaving": "MuiTouchRipple-childLeaving",
                "childPulsate": "MuiTouchRipple-childPulsate",
                "ripple": "MuiTouchRipple-ripple",
                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                "rippleVisible": "MuiTouchRipple-rippleVisible",
                "root": "MuiTouchRipple-root",
              }
            }
          >
            <span
              className="MuiTouchRipple-root"
            >
              <TransitionGroup
                childFactory={[Function]}
                component={null}
                exit={true}
              />
            </span>
          </ForwardRef(TouchRipple)>
        </WithStyles(memo)>
      </button>
    </ForwardRef(ButtonBase)>
  </WithStyles(ForwardRef(ButtonBase))>,
  <ForwardRef(ButtonBase)
    className="makeStyles-image-2"
    classes={
      Object {
        "disabled": "Mui-disabled",
        "focusVisible": "Mui-focusVisible",
        "root": "MuiButtonBase-root",
      }
    }
    focusRipple={true}
    focusVisibleClassName="makeStyles-focusVisible-3"
    id="Stop"
    onClick={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
  >
    <button
      className="MuiButtonBase-root makeStyles-image-2"
      disabled={false}
      id="Stop"
      onBlur={[Function]}
      onClick={[Function]}
      onDragLeave={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      style={
        Object {
          "width": "40%",
        }
      }
      tabIndex={0}
      type="button"
    >
      <span
        className="makeStyles-imageSrc-5"
        style={
          Object {
            "backgroundImage": "url('stop-time-background.jpg')",
          }
        }
      />
      <span
        className="makeStyles-imageBackdrop-6"
      />
      <span
        className="makeStyles-imageButton-4"
      >
        <WithStyles(ForwardRef(Typography))
          className="makeStyles-imageTitle-7"
          color="inherit"
          component="span"
          variant="subtitle1"
        >
          <ForwardRef(Typography)
            className="makeStyles-imageTitle-7"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter",
                "alignJustify": "MuiTypography-alignJustify",
                "alignLeft": "MuiTypography-alignLeft",
                "alignRight": "MuiTypography-alignRight",
                "body1": "MuiTypography-body1",
                "body2": "MuiTypography-body2",
                "button": "MuiTypography-button",
                "caption": "MuiTypography-caption",
                "colorError": "MuiTypography-colorError",
                "colorInherit": "MuiTypography-colorInherit",
                "colorPrimary": "MuiTypography-colorPrimary",
                "colorSecondary": "MuiTypography-colorSecondary",
                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                "displayBlock": "MuiTypography-displayBlock",
                "displayInline": "MuiTypography-displayInline",
                "gutterBottom": "MuiTypography-gutterBottom",
                "h1": "MuiTypography-h1",
                "h2": "MuiTypography-h2",
                "h3": "MuiTypography-h3",
                "h4": "MuiTypography-h4",
                "h5": "MuiTypography-h5",
                "h6": "MuiTypography-h6",
                "noWrap": "MuiTypography-noWrap",
                "overline": "MuiTypography-overline",
                "paragraph": "MuiTypography-paragraph",
                "root": "MuiTypography-root",
                "srOnly": "MuiTypography-srOnly",
                "subtitle1": "MuiTypography-subtitle1",
                "subtitle2": "MuiTypography-subtitle2",
              }
            }
            color="inherit"
            component="span"
            variant="subtitle1"
          >
            <span
              className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
            >
              Stop
              <span
                className="makeStyles-imageMarked-8"
              />
            </span>
          </ForwardRef(Typography)>
        </WithStyles(ForwardRef(Typography))>
      </span>
      <WithStyles(memo)
        center={false}
      >
        <ForwardRef(TouchRipple)
          center={false}
          classes={
            Object {
              "child": "MuiTouchRipple-child",
              "childLeaving": "MuiTouchRipple-childLeaving",
              "childPulsate": "MuiTouchRipple-childPulsate",
              "ripple": "MuiTouchRipple-ripple",
              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
              "rippleVisible": "MuiTouchRipple-rippleVisible",
              "root": "MuiTouchRipple-root",
            }
          }
        >
          <span
            className="MuiTouchRipple-root"
          >
            <TransitionGroup
              childFactory={[Function]}
              component={null}
              exit={true}
            />
          </span>
        </ForwardRef(TouchRipple)>
      </WithStyles(memo)>
    </button>
  </ForwardRef(ButtonBase)>,
  <button
    className="MuiButtonBase-root makeStyles-image-2"
    disabled={false}
    id="Stop"
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "width": "40%",
      }
    }
    tabIndex={0}
    type="button"
  >
    <span
      className="makeStyles-imageSrc-5"
      style={
        Object {
          "backgroundImage": "url('stop-time-background.jpg')",
        }
      }
    />
    <span
      className="makeStyles-imageBackdrop-6"
    />
    <span
      className="makeStyles-imageButton-4"
    >
      <WithStyles(ForwardRef(Typography))
        className="makeStyles-imageTitle-7"
        color="inherit"
        component="span"
        variant="subtitle1"
      >
        <ForwardRef(Typography)
          className="makeStyles-imageTitle-7"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="inherit"
          component="span"
          variant="subtitle1"
        >
          <span
            className="MuiTypography-root makeStyles-imageTitle-7 MuiTypography-subtitle1 MuiTypography-colorInherit"
          >
            Stop
            <span
              className="makeStyles-imageMarked-8"
            />
          </span>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </span>
    <WithStyles(memo)
      center={false}
    >
      <ForwardRef(TouchRipple)
        center={false}
        classes={
          Object {
            "child": "MuiTouchRipple-child",
            "childLeaving": "MuiTouchRipple-childLeaving",
            "childPulsate": "MuiTouchRipple-childPulsate",
            "ripple": "MuiTouchRipple-ripple",
            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
            "rippleVisible": "MuiTouchRipple-rippleVisible",
            "root": "MuiTouchRipple-root",
          }
        }
      >
        <span
          className="MuiTouchRipple-root"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
            exit={true}
          />
        </span>
      </ForwardRef(TouchRipple)>
    </WithStyles(memo)>
  </button>,
]
`;
